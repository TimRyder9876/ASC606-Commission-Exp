/***** LOAD TMP_HR_TXNS_CUSTDET_RPT_ALL RECORDS FOR NEW PAY PERIODS *****/

DELETE
FROM
 FINCOMM.COM_HR_TXNS_CUSTDET_RPT_ALL C
WHERE
 C.PAY_PERIOD_ID IN (SELECT P.PP_ID
                     FROM
                      FINCOMM.COM_HR_JEID_PP P
                     WHERE
                      P.TO_BE_PROCESSED = 'Y' AND
                      P.PROCESSED = 'N');
COMMIT;                       

INSERT INTO FINCOMM.COM_HR_TXNS_CUSTDET_RPT_ALL
 (PRODUCT_TYPE, PAY_PERIOD_ID, KGEN_PAYEEID, CUSTOMER_ID, ALT_CUSTOMER_ID, 
  COMP_YEAR, CUST_NI_AMT, CUST_PI_AMT, CUST_RENEWAL_AMT, CUST_INCREASE_AMT, 
  CUST_NEW_AMT, CUST_DIG_NEW_SEM_AMT, RENEWAL_RATE, INCREASE_RATE, NEW_RATE,
  DIGITAL_NEW_SEM_RATE, CUST_COM_AMT, COM_IND, SOURCE, MATCH_METHOD,
  COM_PAYOUT_IND)

SELECT
 CASE WHEN UPPER(N.PRODUCT_TYPE) = 'SAAS ONLY' THEN 'MULTI PRODUCT NON SEM'
      ELSE UPPER(N.PRODUCT_TYPE) END AS PRODUCT_TYPE,
 N.PAY_PERIOD_ID,
 N.KGEN_PAYEEID,
 N.CUSTOMER_ID,
 '' as ALT_CUSTOMER_ID,
 N.COMP_YEAR,
 SUM(N.NI_AMT) AS CUST_NI_AMT,
 SUM(N.PI_AMT) AS CUST_PI_AMT,
 SUM(N.RENEWAL_AMT) AS CUST_RENEWAL_AMT,
 SUM(N.INCREASE_AMT) AS CUST_INCREASE_AMT,
 SUM(N.NEW_AMT) AS CUST_NEW_AMT,
 0 AS CUST_DIG_NEW_SEM_AMT,
 N.RENEWAL_RATE,
 N.INCREASE_RATE,
 N.NEW_RATE,
 0 AS DIGITAL_NEW_SEM_RATE,
 SUM(N.COM_AMT) AS CUST_COM_AMT,
 N.COM_IND,
 'N' AS SOURCE,
 'NA' AS MATCH_METHOD,
 N.COM_PAYOUT_IND
FROM
 FINCOMM.FINCOMM_NCCP_CUSTDET_RPT N
 INNER JOIN FINCOMM.FINCOMM_SCP_REP_LIST R
     ON
       R.KGEN_PAYEEID = N.KGEN_PAYEEID AND
       R.PAY_PERIOD_ID = N.PAY_PERIOD_ID AND
       r.tc_plan_name = 'NCCP MC PLAN' 
 WHERE
   N.COM_PAYOUT_IND = 1 AND
   N.PAY_PERIOD_ID IN (SELECT P.PP_ID
                     FROM
                      FINCOMM.COM_HR_JEID_PP P
                     WHERE
                      P.TO_BE_PROCESSED = 'Y' AND
                      P.PROCESSED = 'N')
  
GROUP BY
  CASE WHEN UPPER(N.PRODUCT_TYPE) = 'SAAS ONLY' THEN 'MULTI PRODUCT NON SEM'
      ELSE UPPER(N.PRODUCT_TYPE) END,
 N.PAY_PERIOD_ID,
 N.KGEN_PAYEEID,
 N.CUSTOMER_ID,
 N.COMP_YEAR,
 N.RENEWAL_RATE,
 N.INCREASE_RATE,
 N.NEW_RATE,
 N.COM_IND,
 N.COM_PAYOUT_IND;
COMMIT;

/***** CREATE TMP_HR_TXNS_TRANS1_ALL TABLE *****/
TRUNCATE TABLE FINCOMM.COM_HR_TXNS_TRANS1_ALL;
COMMIT;

INSERT INTO FINCOMM.COM_HR_TXNS_TRANS1_ALL
 (KGEN_PAYEEID, PAY_PERIOD_ID, ORIG_PAY_PERIOD_ID, CUSTOMER_ID, WW_CUSTOMER_ID, PRODUCT_TYPE,
  CUST_TYPE, COMP_YEAR, ITEM_ID, SV_ITEM_ID, PRODUCT_CODE, PRODUCT_ISSUE_NUM,
  UDAC_CODE, NI_AMT, UNQ_PI_AMT, PI_AMT, PROD_TYPE,
  DAR_IND, CANCEL_IND, THRYV_IND, TRANS_ID, HOME_DB, EXTRACT_DATE)       

SELECT 
   T.KGEN_PAYEEID,
   P.PP_ID AS PAY_PERIOD_ID,
   T.PAY_PERIOD_ID as ORIG_PAY_PERIOD_ID, --added 5-27-2023
   T.CUSTOMER_ID,
   T.WW_CUSTOMER_ID,   
   -- ADDED PLTSEARCH TO THE PRODUCT GROUP LIST 5-27-2023
   CASE WHEN (UPPER(T.PRODUCT_GROUP) LIKE 'SEM%'  OR
             T.PRODUCT_GROUP IN('YPCLKS','YPSRCH','YPCONN','YPSRCHPRO','PLTSEARCH'))
           THEN 'SEM'
        ELSE 'MULTI PRODUCT NON SEM'
        END AS PRODUCT_TYPE,
   T.CUST_TYPE,
   T.COMP_YEAR, 
   T.ITEM_ID, 
   T.SV_ITEM_ID,
   T.PRODUCT_CODE,
   T.PRODUCT_ISSUE_NUM,
   T.UDAC_CODE,
   NVL(T.NI_AMT,0) AS NI_AMT,
   NVL(T.UNQ_PI_AMT,0) AS UNQ_PI_AMT,
   NVL(T.PI_AMT,0) AS PI_AMT,
   T.PROD_TYPE,
   T.DAR_IND,
   T.CANCEL_IND,
   T.THRYV_IND,
   T.TRANS_ID,
   T.HOME_DB, -- ADDED 5-27-2023
   T.EXTRACT_DATE -- ADDED 5-27-2023
FROM
 (
  SELECT
   T1.KGEN_PAYEEID,
   CASE WHEN R.PP_CALANDAR = 'PP' THEN T1.PAY_PERIOD_ID
        WHEN R.PP_CALANDAR = 'WEST' THEN T1.PAY_PERIOD_WEST_ID END AS PAY_PERIOD_ID,
   T1.CUSTOMER_ID,
   T1.WW_CUSTOMER_ID, -- user this to align to custdet   
   T1.PRODUCT_GROUP,
   T1.CUST_TYPE,
   T1.COMP_YEAR, 
   T1.ITEM_ID, 
   T1.SV_ITEM_ID,
   T1.PRODUCT_CODE,
   T1.PRODUCT_ISSUE_NUM,
   T1.UDAC_CODE,
   T1.NI_AMT,
   T1.UNQ_PI_AMT, -- user this to align to custdet
   T1.PI_AMT,
   T1.PRODUCT_TYPE AS PROD_TYPE,
   CASE WHEN UPPER(T1.PRODUCT_CODE) = 'NIRP' THEN 'Y' ELSE 'N' END AS DAR_IND, -- change to 'NIRP' 5-27-2023
   '' CANCEL_IND,
   CASE WHEN UPPER(NVL(DUH.LEVEL1_NAME,'X')) LIKE '%THRYV%' THEN 'Y' 
        WHEN DUH.UDAC_CODE LIKE '%THRYV%' THEN 'Y'
        ELSE 'N' END AS THRYV_IND,
   T1.TRANS_ID AS TRANS_ID,  
   T1.HOME_DB, -- ADDED 5-27-2023
   T1.EXTRACT_DATE -- ADDED 5-27-2023
  FROM    
    FINCOMM.FINCOMM_SF_REP_TRANS T1
    LEFT JOIN FINREPO.DIGITAL_UDAC_HIERARCHY@ORAFIN.DB.YELLOWPAGES.COM DUH
       ON T1.UDAC_CODE = DUH.UDAC_CODE
    INNER JOIN FINCOMM.FINCOMM_SCP_REP_LIST R
     ON
       R.KGEN_PAYEEID = T1.KGEN_PAYEEID AND
       R.PAY_PERIOD_ID = T1.PAY_PERIOD_ID AND
       r.tc_plan_name = 'NCCP MC PLAN' and -- added 5-27-2023
       TO_NUMBER(SUBSTR(CASE WHEN R.PP_CALANDAR = 'PP' THEN T1.PAY_PERIOD_ID
                             WHEN R.PP_CALANDAR = 'WEST' THEN T1.PAY_PERIOD_WEST_ID END,0,4)) >= 2016
                         
  ) T
 CROSS JOIN (SELECT MAX(P.PP_ID) AS PP_ID
             FROM
              FINCOMM.COM_HR_JEID_PP P
             WHERE
              P.TO_BE_PROCESSED = 'Y' AND
              P.PROCESSED = 'N') P
WHERE
 T.PAY_PERIOD_ID IN (SELECT P.PP_ID
                     FROM
                      FINCOMM.COM_HR_JEID_PP P
                     WHERE
                      P.TO_BE_PROCESSED = 'Y' AND
                      P.PROCESSED = 'N'
                     UNION ALL 
                     SELECT MAX(PP.PP_ID) AS PRIOR_PP
                     FROM
                      FINCOMM.COM_HR_JEID_PP PP
--                      INNER JOIN (SELECT MAX(PP.YR_MTH)-1 AS PRIOR_MTH 
--                                  FROM FINCOMM.COM_HR_JEID_PP PP
--                                  WHERE PP.TO_BE_PROCESSED = 'Y' AND PP.PROCESSED = 'N') X
                      /* Changed 02-02-2024 january date*/   
                      INNER JOIN (SELECT max(to_char(add_months(to_date(PP.YR_MTH,'YYYYMM'),-1),'YYYYMM')) AS PRIOR_MTH 
                                  FROM FINCOMM.COM_HR_JEID_PP PP
                                  WHERE PP.TO_BE_PROCESSED = 'Y' AND PP.PROCESSED = 'N') X
                      ON PP.YR_MTH = X.PRIOR_MTH);
COMMIT;       


/***** DELETE PAY PERIODS TO PROCESS FROM STAGE LOAD *****/
DELETE
FROM
 FINCOMM.COM_HR_TXNS_STAGE_ALL S
WHERE
 S.PAY_PERIOD_ID IN (SELECT P.PP_ID
                     FROM
                      FINCOMM.COM_HR_JEID_PP P
                     WHERE
                      P.TO_BE_PROCESSED = 'Y' AND
                      P.PROCESSED = 'N');
COMMIT;                       

/***** M0 STAGE LOAD - COM AMT IS ZERO OR NI AND PI AMTS ARE ZERO *****/
INSERT INTO COM_HR_TXNS_STAGE_ALL
 (KGEN_PAYEEID, PAY_PERIOD_ID, CUSTOMER_ID, ALT_CUSTOMER_ID, PRODUCT_TYPE,
  COMP_YEAR, SOURCE, COM_IND, CUST_NI_AMT, CUST_PI_AMT,
  CUST_NEW_AMT, CUST_RENEWAL_AMT, CUST_INCREASE_AMT, NEW_RATE, RENEWAL_RATE,
  INCREASE_RATE, CUST_COM_AMT, CUST_TYPE, ITEM_ID, SV_ITEM_ID,
  PRODUCT_CODE, PRODUCT_ISSUE_NUM, PROD_TYPE, UDAC_CODE, DAR_IND,
  CANCEL_IND, THRYV_IND, NI_AMT, PI_AMT, ORIG_UNQ_PI_AMT,
  ORIG_PI_AMT, CUMUL_NI_CUST_TYPE_AMT, CUMULATIVE_NI_AMT, CUMUL_UNQ_PI_CUST_TYPE_AMT, CUMULATIVE_UNQ_PI_AMT,         
  CUMUL_PI_CUST_TYPE_AMT,  CUMULATIVE_PI_AMT, TRANS_ID, CUSTDET_TRANS_ID, QUERY_MATCH)

  SELECT DISTINCT
    C.KGEN_PAYEEID, C.PAY_PERIOD_ID, C.CUSTOMER_ID, C.ALT_CUSTOMER_ID, C.PRODUCT_TYPE,
    C.COMP_YEAR, C.SOURCE, C.COM_IND, C.CUST_NI_AMT, C.CUST_PI_AMT,
    C.CUST_NEW_AMT, C.CUST_RENEWAL_AMT, C.CUST_INCREASE_AMT, C.NEW_RATE, C.RENEWAL_RATE,
    C.INCREASE_RATE, C.CUST_COM_AMT, 'ADV' AS CUST_TYPE, '' AS ITEM_ID, '' AS SV_ITEM_ID,
    '' AS PRODUCT_CODE, '' AS PRODUCT_ISSUE_NUM, 'UNKNOWN' AS PROD_TYPE, '' AS UDAC_CODE, 'N' AS DAR_IND,
    'N' AS CANCEL_IND, 'N' AS THRYV_IND, C.CUST_NI_AMT AS NI_AMT, C.CUST_PI_AMT AS PI_AMT, C.CUST_PI_AMT AS ORIG_UNQ_PI_AMT,
    C.CUST_PI_AMT AS ORIG_PI_AMT, C.CUST_NI_AMT AS CUMUL_NI_CUST_TYPE_AMT, C.CUST_NI_AMT AS CUMULATIVE_NI_AMT,
    C.CUST_PI_AMT AS CUMUL_UNQ_PI_CUST_TYPE_AMT, C.CUST_PI_AMT AS CUMULATIVE_UNQ_PI_AMT,
    C.CUST_PI_AMT AS CUMUL_PI_CUST_TYPE_AMT, C.CUST_PI_AMT AS CUMULATIVE_PI_AMT, '' AS TRANS_ID,
    C.ROWID AS CUSTDET_TRANS_ID, 
    CASE WHEN C.CUST_COM_AMT = 0 THEN 'CUSTDET_COM_AMT_IS_ZERO' 
         WHEN C.CUST_NI_AMT = 0 AND C.CUST_PI_AMT = 0 THEN 'CUSTDET_NI_AND_PI_AMTS_ARE_ZERO'
      END AS QUERY_MATCH
  FROM 
   FINCOMM.COM_HR_TXNS_CUSTDET_RPT_ALL C
  WHERE
   C.MATCH_METHOD = 'NA' AND
   C.COM_PAYOUT_IND = 1 AND
   (C.CUST_COM_AMT = 0 OR
    C.CUST_NI_AMT = 0 AND C.CUST_PI_AMT = 0) AND 
   C.SOURCE = 'N' AND
   C.PAY_PERIOD_ID IN (SELECT P.PP_ID
                     FROM
                      FINCOMM.COM_HR_JEID_PP P
                     WHERE
                      P.TO_BE_PROCESSED = 'Y' AND
                      P.PROCESSED = 'N')
; 

COMMIT;

UPDATE FINCOMM.COM_HR_TXNS_CUSTDET_RPT_ALL A
SET
 A.MATCH_METHOD = 'M0'
WHERE
 A.ROWID IN (
              SELECT DISTINCT
               S.CUSTDET_TRANS_ID
              FROM 
               FINCOMM.COM_HR_TXNS_STAGE_ALL S
              WHERE
               S.QUERY_MATCH IN ('CUSTDET_COM_AMT_IS_ZERO','CUSTDET_NI_AND_PI_AMTS_ARE_ZERO'))
               AND A.MATCH_METHOD IN ('NA');
COMMIT;   



/***** M1 STAGE LOAD *****/

INSERT INTO COM_HR_TXNS_STAGE_ALL
 (KGEN_PAYEEID, PAY_PERIOD_ID, CUSTOMER_ID, ALT_CUSTOMER_ID, PRODUCT_TYPE,
  COMP_YEAR, SOURCE, COM_IND, CUST_NI_AMT, CUST_PI_AMT,
  CUST_NEW_AMT, CUST_RENEWAL_AMT, CUST_INCREASE_AMT, NEW_RATE, RENEWAL_RATE,
  INCREASE_RATE, CUST_COM_AMT, CUST_TYPE, ITEM_ID, SV_ITEM_ID,
  PRODUCT_CODE, PRODUCT_ISSUE_NUM, PROD_TYPE, UDAC_CODE, DAR_IND,
  CANCEL_IND, THRYV_IND, NI_AMT, PI_AMT, ORIG_UNQ_PI_AMT,
  ORIG_PI_AMT, CUMUL_NI_CUST_TYPE_AMT, CUMULATIVE_NI_AMT, CUMUL_UNQ_PI_CUST_TYPE_AMT, CUMULATIVE_UNQ_PI_AMT,         
  CUMUL_PI_CUST_TYPE_AMT,  CUMULATIVE_PI_AMT, TRANS_ID, CUSTDET_TRANS_ID, QUERY_MATCH)

    /***** STANDARD MATCHING ON PROPER PAYPERIOD, WW_CUSTOMER_ID, N CUST DETAIL SOURCE *****/

 SELECT /*+ INDEX(C TMP_HR_TXNS_CUSTDET_RPT_01)
            INDEX(T TMP_HR_TXNS_TRANS1_01) */
   C.KGEN_PAYEEID, C.PAY_PERIOD_ID, C.CUSTOMER_ID, C.ALT_CUSTOMER_ID, C.PRODUCT_TYPE,
   C.COMP_YEAR, C.SOURCE, C.COM_IND, C.CUST_NI_AMT, C.CUST_PI_AMT,
   C.CUST_NEW_AMT, C.CUST_RENEWAL_AMT, C.CUST_INCREASE_AMT, C.NEW_RATE, C.RENEWAL_RATE,
   C.INCREASE_RATE, C.CUST_COM_AMT, T.CUST_TYPE, T.ITEM_ID, T.SV_ITEM_ID,
   T.PRODUCT_CODE, T.PRODUCT_ISSUE_NUM, T.PROD_TYPE, T.UDAC_CODE, T.DAR_IND,
   T.CANCEL_IND, T.THRYV_IND, T.NI_AMT, 
   CASE 
    WHEN ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_UNQ_PI_AMT) = 0 THEN T.UNQ_PI_AMT
    WHEN ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_PI_AMT) = 0 THEN T.PI_AMT
   END AS PI_AMT,
   T.UNQ_PI_AMT AS ORIG_UNQ_PI_AMT,
   T.PI_AMT AS ORIG_PI_AMT, 
   T.CUMUL_NI_CUST_TYPE_AMT, T.CUMULATIVE_NI_AMT, T.CUMUL_UNQ_PI_CUST_TYPE_AMT,  T.CUMULATIVE_UNQ_PI_AMT,         
   T.CUMUL_PI_CUST_TYPE_AMT, T.CUMULATIVE_PI_AMT, T.TRANS_ID,
   C.ROWID AS CUSTDET_TRANS_ID,
   CASE 
    WHEN ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_UNQ_PI_AMT) = 0 THEN 'PP_WW_CUST_NI_AND_UNQ_PI_MATCH_1'
    WHEN ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_PI_AMT) = 0 THEN 'PP_WW_CUST_NI_AND_PI_MATCH_1'
    END AS QUERY_MATCH
  FROM    
   FINCOMM.COM_HR_TXNS_CUSTDET_RPT_ALL C
   INNER JOIN
     (
        SELECT
         X.PERIOD, X.COMP_YEAR, X.YR_MTH, X.CURRENT_MTH, X.PRIOR_MTH,
         X.KGEN_PAYEEID, X.PAY_PERIOD_ID, X.PRODUCT_TYPE, X.WW_CUSTOMER_ID, X.CUST_TYPE, 
         X.UNQ_PI_AMT, X.PI_AMT, X.NI_AMT, X.ITEM_ID, X.SV_ITEM_ID, 
         X.PRODUCT_CODE, X.PRODUCT_ISSUE_NUM, X.PROD_TYPE, X.UDAC_CODE, X.DAR_IND,
         X.CANCEL_IND, X.THRYV_IND, X.TRANS_ID,
         SUM(X.NI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.CUST_TYPE,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMUL_NI_CUST_TYPE_AMT,
         SUM(X.NI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMULATIVE_NI_AMT, 
         SUM(X.UNQ_PI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.CUST_TYPE,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMUL_UNQ_PI_CUST_TYPE_AMT,  
         SUM(X.UNQ_PI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMULATIVE_UNQ_PI_AMT,         
         SUM(X.PI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.CUST_TYPE,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMUL_PI_CUST_TYPE_AMT,  
         SUM(X.PI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMULATIVE_PI_AMT      
        FROM
         (
            SELECT 
             CASE WHEN SUBSTR(UPPER(T.HOME_DB), 0,9) = 'DAR MONTH' AND
                       UPPER(T.HOME_DB) LIKE '%SUBSCRIPTION FOR %' AND 
                       /* ADDED VALIDATE_CONVERSION LINE FOR A DSS UPDATE 01-03-2024*/
                       VALIDATE_CONVERSION(SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'SUBSCRIPTION FOR ',1)+17,10) AS DATE,'MM/DD/YYYY') = 1 AND
                       /* ADDED FOR TRANSACTIONS COMING THROUGH IN 2 MONTHS BACK USING THIS PHRASING 02-02-2024*/
                        TO_CHAR(TO_DATE(SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'SUBSCRIPTION FOR ',1)+17,10),'mm/dd/yyyy'),'YYYYMM') = Y.PRIOR_MTH
                       THEN TO_CHAR(TO_DATE(SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'SUBSCRIPTION FOR ',1)+17,10),'mm/dd/yyyy'),'YYYYMM')
                       /* ADDED FOR TRANSACTIONS COMING THROUGH IN 2 MONTHS BACK USING THIS PHRASING 02-02-2024*/
                  WHEN SUBSTR(UPPER(T.HOME_DB), 0,9) = 'DAR MONTH' AND
                       UPPER(T.HOME_DB) LIKE '%SUBSCRIPTION FOR %' AND 
                       VALIDATE_CONVERSION(SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'SUBSCRIPTION FOR ',1)+17,10) AS DATE,'MM/DD/YYYY') = 1 AND
                        TO_CHAR(TO_DATE(SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'SUBSCRIPTION FOR ',1)+17,10),'mm/dd/yyyy'),'YYYYMM') < Y.PRIOR_MTH
                       THEN Y.PRIOR_MTH
                  WHEN UPPER(T.HOME_DB) LIKE '%MOVE DAR CANCEL TO PRIOR PP%' AND
                       SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'MOVE DAR CANCEL TO PRIOR PP',1)+28,7) IN (SELECT P.PP_ID
                                         FROM
                                          FINCOMM.COM_HR_JEID_PP P
                                         WHERE
                                          P.TO_BE_PROCESSED = 'Y' AND
                                          P.PROCESSED = 'N')  
                       THEN TO_CHAR(Y.PRIOR_MTH)
                  WHEN UPPER(T.HOME_DB) LIKE '%MOVE DAR CANCEL TO PRIOR PP%' AND
                       SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'MOVE DAR CANCEL TO PRIOR PP',1)+28,7) IN (SELECT P.PP_ID
                                         FROM
                                          FINCOMM.COM_HR_JEID_PP P
                                         WHERE
                                          P.TO_BE_PROCESSED = 'Y' AND
                                          P.PROCESSED = 'Y') AND
                       T.ORIG_PAY_PERIOD_ID IN (SELECT P.PP_ID
                                         FROM
                                          FINCOMM.COM_HR_JEID_PP P
                                         WHERE
                                          P.TO_BE_PROCESSED = 'Y' AND
                                          P.PROCESSED = 'Y') AND
                       TO_CHAR(T.EXTRACT_DATE-1,'YYYYMM') = TO_CHAR(Y.PRIOR_MTH)                 
                       THEN TO_CHAR(Y.PRIOR_2_MTH)       
                  WHEN T.ORIG_PAY_PERIOD_ID <> T.PAY_PERIOD_ID AND
                       T.ORIG_PAY_PERIOD_ID IN (SELECT P.PP_ID
                                         FROM
                                          FINCOMM.COM_HR_JEID_PP P
                                         WHERE
                                          P.TO_BE_PROCESSED = 'Y' AND
                                          P.PROCESSED = 'N')
                       THEN TO_CHAR(Y.PRIOR_MTH)
                  WHEN UPPER(T.HOME_DB) LIKE '%DAR CANCEL%' AND
                       T.ORIG_PAY_PERIOD_ID IN (SELECT P.PP_ID
                                                FROM
                                                 FINCOMM.COM_HR_JEID_PP P
                                                WHERE
                                                 P.TO_BE_PROCESSED = 'Y' AND
                                                 P.PROCESSED = 'N')  
                       THEN TO_CHAR(Y.PRIOR_MTH)      
                  WHEN UPPER(T.HOME_DB) LIKE '%MOVE NEGATIVE INCREASE BACK TO PRIOR PP%' AND
                       T.ORIG_PAY_PERIOD_ID = T.PAY_PERIOD_ID AND
                       T.ORIG_PAY_PERIOD_ID IN (SELECT P.PP_ID
                                                FROM
                                                 FINCOMM.COM_HR_JEID_PP P
                                                WHERE
                                                 P.TO_BE_PROCESSED = 'Y' AND
                                                 P.PROCESSED = 'N') 
                       THEN TO_CHAR(Y.PRIOR_MTH) 
                  WHEN UPPER(T.HOME_DB) = 'M TMS3 DAR DBI NI RATEUP DSS UPDATE' THEN TO_CHAR(T.EXTRACT_DATE,'YYYYMM')      
                  WHEN UPPER(T.HOME_DB) LIKE '%DAR NTBOOST REVERSAL DAR FORCE%' AND
                       T.ORIG_PAY_PERIOD_ID IN (SELECT P.PP_ID
                                                FROM
                                                 FINCOMM.COM_HR_JEID_PP P
                                                WHERE
                                                 P.TO_BE_PROCESSED = 'Y' AND
                                                 P.PROCESSED = 'Y') 
                       THEN TO_CHAR(Y.PRIOR_2_MTH)  
                  ELSE TO_CHAR(T.EXTRACT_DATE-1,'YYYYMM')
                   END AS PERIOD, 
             CASE WHEN UPPER(T.HOME_DB) LIKE '%COMP YEAR FLIP%' AND 
                       T.COMP_YEAR < TO_NUMBER(SUBSTR(P.YR_MTH,0,4)) THEN TO_NUMBER(SUBSTR(P.YR_MTH,0,4))
                  ELSE T.COMP_YEAR END AS COMP_YEAR,
             P.YR_MTH, X.CURRENT_MTH, Y.PRIOR_MTH, T.KGEN_PAYEEID, T.PAY_PERIOD_ID,
             T.HOME_DB,T.EXTRACT_DATE, T.ORIG_PAY_PERIOD_ID,
             T.PRODUCT_TYPE, T.WW_CUSTOMER_ID, T.CUST_TYPE, T.UNQ_PI_AMT, T.PI_AMT,
             T.NI_AMT, T.ITEM_ID, T.SV_ITEM_ID, T.PRODUCT_CODE, T.PRODUCT_ISSUE_NUM,
             T.PROD_TYPE, T.UDAC_CODE, T.DAR_IND, T.CANCEL_IND, T.THRYV_IND,
             T.TRANS_ID
            FROM
             FINCOMM.COM_HR_TXNS_TRANS1_ALL T
             INNER JOIN FINCOMM.COM_HR_JEID_PP P
              ON T.PAY_PERIOD_ID = P.PP_ID AND
                 P.TO_BE_PROCESSED = 'Y' AND
                 P.PROCESSED = 'N'
              CROSS JOIN (SELECT MAX(PP.YR_MTH) AS CURRENT_MTH FROM FINCOMM.COM_HR_JEID_PP PP
                          WHERE PP.TO_BE_PROCESSED = 'Y' AND PP.PROCESSED = 'N') X
              CROSS JOIN (SELECT MAX(X.PREVIOUS_MTH) AS PRIOR_MTH, MAX(X.PRIOR_2_MTH) AS PRIOR_2_MTH
                          FROM (SELECT YR_MTH AS PREVIOUS_MTH, LAG(YR_MTH,1,0) OVER (ORDER BY YR_MTH) AS PRIOR_2_MTH
                                FROM (SELECT DISTINCT PP.YR_MTH FROM FINCOMM.COM_HR_JEID_PP PP
                                WHERE PP.TO_BE_PROCESSED = 'Y' AND PP.PROCESSED = 'Y') X ) X   ) Y 
         ) X
        WHERE
         X.PERIOD = TO_CHAR(ADD_MONTHS(TO_DATE(X.CURRENT_MTH||'01','YYYYMMDD'),-1),'YYYYMM')
        ORDER BY
         X.WW_CUSTOMER_ID,
         X.COMP_YEAR
     ) T
    ON
      C.KGEN_PAYEEID = T.KGEN_PAYEEID AND
      C.COMP_YEAR = T.COMP_YEAR AND
      (C.PRODUCT_TYPE = T.PRODUCT_TYPE OR
       (C.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' AND T.PRODUCT_TYPE = 'SEM') OR
       C.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' OR
       (C.PRODUCT_TYPE = 'COHORT' AND T.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM')) AND
      C.CUSTOMER_ID = T.WW_CUSTOMER_ID AND
      C.COM_PAYOUT_IND = 1 AND
      C.SOURCE = 'N' AND
      C.MATCH_METHOD IN('NA') AND
      C.PAY_PERIOD_ID IN (SELECT P.PP_ID
                     FROM
                      FINCOMM.COM_HR_JEID_PP P
                     WHERE
                      P.TO_BE_PROCESSED = 'Y' AND
                      P.PROCESSED = 'N')
   WHERE
    ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_PI_AMT) = 0 
     OR
    ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_UNQ_PI_AMT) = 0     
;
COMMIT;

UPDATE FINCOMM.COM_HR_TXNS_CUSTDET_RPT_ALL A
SET
 A.MATCH_METHOD = 'M1'
WHERE
 A.ROWID IN (
              SELECT DISTINCT
               S.CUSTDET_TRANS_ID
              FROM 
               FINCOMM.COM_HR_TXNS_STAGE_ALL S
              WHERE
               S.QUERY_MATCH IN ('PP_WW_CUST_NI_AND_UNQ_PI_MATCH_1','PP_WW_CUST_NI_AND_PI_MATCH_1'))
               AND A.MATCH_METHOD IN ('NA');
 
 COMMIT; 


/***** M2 STAGE LOAD *****/

INSERT INTO COM_HR_TXNS_STAGE_ALL
 (KGEN_PAYEEID, PAY_PERIOD_ID, CUSTOMER_ID, ALT_CUSTOMER_ID, PRODUCT_TYPE,
  COMP_YEAR, SOURCE, COM_IND, CUST_NI_AMT, CUST_PI_AMT,
  CUST_NEW_AMT, CUST_RENEWAL_AMT, CUST_INCREASE_AMT, NEW_RATE, RENEWAL_RATE,
  INCREASE_RATE, CUST_COM_AMT, CUST_TYPE, ITEM_ID, SV_ITEM_ID,
  PRODUCT_CODE, PRODUCT_ISSUE_NUM, PROD_TYPE, UDAC_CODE, DAR_IND,
  CANCEL_IND, THRYV_IND, NI_AMT, PI_AMT, ORIG_UNQ_PI_AMT,
  ORIG_PI_AMT, CUMUL_NI_CUST_TYPE_AMT, CUMULATIVE_NI_AMT, CUMUL_UNQ_PI_CUST_TYPE_AMT, CUMULATIVE_UNQ_PI_AMT,         
  CUMUL_PI_CUST_TYPE_AMT,  CUMULATIVE_PI_AMT, TRANS_ID, CUSTDET_TRANS_ID, QUERY_MATCH)

  /***** STANDARD MATCHING ON PROPER PAYPERIOD, WW_CUSTOMER_ID, N CUST DETAIL SOURCE *****/

 SELECT /*+ INDEX(C TMP_HR_TXNS_CUSTDET_RPT_01)
            INDEX(T TMP_HR_TXNS_TRANS1_01) */
   C.KGEN_PAYEEID, C.PAY_PERIOD_ID, C.CUSTOMER_ID, C.ALT_CUSTOMER_ID, C.PRODUCT_TYPE,
   C.COMP_YEAR, C.SOURCE, C.COM_IND, C.CUST_NI_AMT, C.CUST_PI_AMT,
   C.CUST_NEW_AMT, C.CUST_RENEWAL_AMT, C.CUST_INCREASE_AMT, C.NEW_RATE, C.RENEWAL_RATE,
   C.INCREASE_RATE, C.CUST_COM_AMT, T.CUST_TYPE, T.ITEM_ID, T.SV_ITEM_ID,
   T.PRODUCT_CODE, T.PRODUCT_ISSUE_NUM, T.PROD_TYPE, T.UDAC_CODE, T.DAR_IND,
   T.CANCEL_IND, T.THRYV_IND, T.NI_AMT, 
   CASE 
    WHEN ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_UNQ_PI_AMT) = 0 THEN T.UNQ_PI_AMT
    WHEN ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_PI_AMT) = 0 THEN T.PI_AMT
   END AS PI_AMT,
   T.UNQ_PI_AMT AS ORIG_UNQ_PI_AMT,
   T.PI_AMT AS ORIG_PI_AMT, 
   T.CUMUL_NI_CUST_TYPE_AMT, T.CUMULATIVE_NI_AMT, T.CUMUL_UNQ_PI_CUST_TYPE_AMT,  T.CUMULATIVE_UNQ_PI_AMT,         
   T.CUMUL_PI_CUST_TYPE_AMT, T.CUMULATIVE_PI_AMT, T.TRANS_ID,
   C.ROWID AS CUSTDET_TRANS_ID,
   CASE 
    WHEN ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_UNQ_PI_AMT) = 0 THEN 'PP_WW_CUST_NI_AND_UNQ_PI_MATCH_2'
    WHEN ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_PI_AMT) = 0 THEN 'PP_WW_CUST_NI_AND_PI_MATCH_2'
    WHEN ABS(T.CUST_CUMULATIVE_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(T.CUST_CUMULATIVE_PI_AMT-T.CUMULATIVE_UNQ_PI_AMT) = 0 
          THEN 'PP_WW_CUST_CUM_NI_AND_UNQ_PI_MATCH_2' 
    WHEN ABS(T.CUST_CUMULATIVE_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(T.CUST_CUMULATIVE_PI_AMT-T.CUMULATIVE_PI_AMT) = 0  
          THEN 'PP_WW_CUST_CUM_NI_AND_PI_MATCH_2'
    END AS QUERY_MATCH
  FROM    
   FINCOMM.COM_HR_TXNS_CUSTDET_RPT_ALL C
   INNER JOIN
     (
        SELECT
         X.PERIOD, X.COMP_YEAR, X.YR_MTH, X.CURRENT_MTH, X.PRIOR_MTH,
         X.KGEN_PAYEEID, X.PAY_PERIOD_ID, X.PRODUCT_TYPE, X.WW_CUSTOMER_ID, X.CUST_TYPE, 
         X.UNQ_PI_AMT, X.PI_AMT, X.NI_AMT, X.ITEM_ID, X.SV_ITEM_ID, 
         X.PRODUCT_CODE, X.PRODUCT_ISSUE_NUM, X.PROD_TYPE, X.UDAC_CODE, X.DAR_IND,
         X.CANCEL_IND, X.THRYV_IND, X.TRANS_ID,
         SUM(X.NI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              --CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.CUST_TYPE,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMUL_NI_CUST_TYPE_AMT,
         SUM(X.NI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              --CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMULATIVE_NI_AMT, 
         SUM(X.UNQ_PI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              --CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.CUST_TYPE,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMUL_UNQ_PI_CUST_TYPE_AMT,  
         SUM(X.UNQ_PI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              --CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMULATIVE_UNQ_PI_AMT,         
         SUM(X.PI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              --CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.CUST_TYPE,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMUL_PI_CUST_TYPE_AMT,  
         SUM(X.PI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              --CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMULATIVE_PI_AMT,
         Y.CUST_CUMULATIVE_NI_AMT,
         Y.CUST_CUMULATIVE_PI_AMT                  
        FROM
         (
            SELECT 
             CASE WHEN SUBSTR(UPPER(T.HOME_DB), 0,9) = 'DAR MONTH' AND
                       UPPER(T.HOME_DB) LIKE '%SUBSCRIPTION FOR %' AND
                        /* ADDED VALIDATE_CONVERSION LINE FOR A DSS UPDATE 01-03-2024*/
                       VALIDATE_CONVERSION(SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'SUBSCRIPTION FOR ',1)+17,10) AS DATE,'MM/DD/YYYY') = 1 THEN 
                        TO_CHAR(TO_DATE(SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'SUBSCRIPTION FOR ',1)+17,10),'mm/dd/yyyy'),'YYYYMM')
                  WHEN UPPER(T.HOME_DB) LIKE '%MOVE DAR CANCEL TO PRIOR PP%' AND
                       SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'MOVE DAR CANCEL TO PRIOR PP',1)+28,7) IN (SELECT P.PP_ID
                                         FROM
                                          FINCOMM.COM_HR_JEID_PP P
                                         WHERE
                                          P.TO_BE_PROCESSED = 'Y' AND
                                          P.PROCESSED = 'N')  
                       THEN TO_CHAR(Y.PRIOR_MTH)
                  WHEN UPPER(T.HOME_DB) LIKE '%MOVE DAR CANCEL TO PRIOR PP%' AND
                       SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'MOVE DAR CANCEL TO PRIOR PP',1)+28,7) IN (SELECT P.PP_ID
                                         FROM
                                          FINCOMM.COM_HR_JEID_PP P
                                         WHERE
                                          P.TO_BE_PROCESSED = 'Y' AND
                                          P.PROCESSED = 'Y') AND
                       T.ORIG_PAY_PERIOD_ID IN (SELECT P.PP_ID
                                         FROM
                                          FINCOMM.COM_HR_JEID_PP P
                                         WHERE
                                          P.TO_BE_PROCESSED = 'Y' AND
                                          P.PROCESSED = 'Y') AND
                       TO_CHAR(T.EXTRACT_DATE-1,'YYYYMM') = TO_CHAR(Y.PRIOR_MTH)                 
                       THEN TO_CHAR(Y.PRIOR_2_MTH) 
                  WHEN T.ORIG_PAY_PERIOD_ID <> T.PAY_PERIOD_ID AND
                       T.ORIG_PAY_PERIOD_ID IN (SELECT P.PP_ID
                                         FROM
                                          FINCOMM.COM_HR_JEID_PP P
                                         WHERE
                                          P.TO_BE_PROCESSED = 'Y' AND
                                          P.PROCESSED = 'N')
                       THEN TO_CHAR(Y.PRIOR_MTH)
                  WHEN UPPER(T.HOME_DB) LIKE '%MOVE NEGATIVE INCREASE BACK TO PRIOR PP%' AND
                       T.ORIG_PAY_PERIOD_ID = T.PAY_PERIOD_ID AND
                       T.ORIG_PAY_PERIOD_ID IN (SELECT P.PP_ID
                                                FROM
                                                 FINCOMM.COM_HR_JEID_PP P
                                                WHERE
                                                 P.TO_BE_PROCESSED = 'Y' AND
                                                 P.PROCESSED = 'N') 
                       THEN TO_CHAR(Y.PRIOR_MTH)                        
                 WHEN UPPER(T.HOME_DB) = 'M TMS3 DAR DBI NI RATEUP DSS UPDATE' THEN TO_CHAR(T.EXTRACT_DATE,'YYYYMM') 
                 ELSE TO_CHAR(T.EXTRACT_DATE-1,'YYYYMM')
                  END AS PERIOD, 
             CASE WHEN UPPER(T.HOME_DB) LIKE '%COMP YEAR FLIP%' AND 
                       T.COMP_YEAR < TO_NUMBER(SUBSTR(P.YR_MTH,0,4)) THEN TO_NUMBER(SUBSTR(P.YR_MTH,0,4))
                  ELSE T.COMP_YEAR END AS COMP_YEAR,
             P.YR_MTH, X.CURRENT_MTH, Y.PRIOR_MTH, T.KGEN_PAYEEID, T.PAY_PERIOD_ID,
             T.HOME_DB,T.EXTRACT_DATE, T.ORIG_PAY_PERIOD_ID,
             T.PRODUCT_TYPE, T.WW_CUSTOMER_ID, T.CUST_TYPE, T.UNQ_PI_AMT, T.PI_AMT,
             T.NI_AMT, T.ITEM_ID, T.SV_ITEM_ID, T.PRODUCT_CODE, T.PRODUCT_ISSUE_NUM,
             T.PROD_TYPE, T.UDAC_CODE, T.DAR_IND, T.CANCEL_IND, T.THRYV_IND,
             T.TRANS_ID
            FROM
             FINCOMM.COM_HR_TXNS_TRANS1_ALL T
             INNER JOIN FINCOMM.COM_HR_JEID_PP P
              ON T.PAY_PERIOD_ID = P.PP_ID AND
                 P.TO_BE_PROCESSED = 'Y' AND
                 P.PROCESSED = 'N'
              CROSS JOIN (SELECT MAX(PP.YR_MTH) AS CURRENT_MTH FROM FINCOMM.COM_HR_JEID_PP PP
                          WHERE PP.TO_BE_PROCESSED = 'Y' AND PP.PROCESSED = 'N') X
              CROSS JOIN (SELECT MAX(X.PREVIOUS_MTH) AS PRIOR_MTH, MAX(X.PRIOR_2_MTH) AS PRIOR_2_MTH
                          FROM (SELECT YR_MTH AS PREVIOUS_MTH, LAG(YR_MTH,1,0) OVER (ORDER BY YR_MTH) AS PRIOR_2_MTH
                                FROM (SELECT DISTINCT PP.YR_MTH FROM FINCOMM.COM_HR_JEID_PP PP
                                WHERE PP.TO_BE_PROCESSED = 'Y' AND PP.PROCESSED = 'Y') X ) X   ) Y            
         ) X
         INNER JOIN 
          (SELECT DISTINCT
           C.PAY_PERIOD_ID,
           C.KGEN_PAYEEID,
           C.CUSTOMER_ID,
           C.COMP_YEAR,
           SUM(C.CUST_NI_AMT) OVER 
              (PARTITION BY  C.KGEN_PAYEEID, C.CUSTOMER_ID, C.COMP_YEAR, C.PAY_PERIOD_ID
                   ORDER BY C.PAY_PERIOD_ID) AS CUST_CUMULATIVE_NI_AMT,
           SUM(C.CUST_PI_AMT) OVER 
              (PARTITION BY  C.KGEN_PAYEEID, C.CUSTOMER_ID, C.COMP_YEAR, C.PAY_PERIOD_ID
                   ORDER BY C.PAY_PERIOD_ID) AS CUST_CUMULATIVE_PI_AMT         
          FROM FINCOMM.COM_HR_TXNS_CUSTDET_RPT_ALL C
          WHERE MATCH_METHOD = 'NA' AND
            C.PAY_PERIOD_ID IN (SELECT P.PP_ID
                                FROM FINCOMM.COM_HR_JEID_PP P
                                WHERE P.TO_BE_PROCESSED = 'Y' AND
                                      P.PROCESSED = 'N')) Y
         ON Y.PAY_PERIOD_ID = X.PAY_PERIOD_ID AND
            Y.KGEN_PAYEEID = X.KGEN_PAYEEID AND
            Y.COMP_YEAR = X.COMP_YEAR AND
            Y.CUSTOMER_ID = X.WW_CUSTOMER_ID         
        WHERE
         X.PERIOD = TO_CHAR(ADD_MONTHS(TO_DATE(X.CURRENT_MTH||'01','YYYYMMDD'),-1),'YYYYMM')
        ORDER BY
         X.WW_CUSTOMER_ID,
         X.COMP_YEAR
     ) T
    ON
      C.KGEN_PAYEEID = T.KGEN_PAYEEID AND
      C.COMP_YEAR = T.COMP_YEAR AND
      (C.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' OR
       C.PRODUCT_TYPE = T.PRODUCT_TYPE) AND
      C.CUSTOMER_ID = T.WW_CUSTOMER_ID AND
      C.COM_PAYOUT_IND = 1 AND
      C.SOURCE = 'N' AND
      C.MATCH_METHOD IN('NA') AND
      C.PAY_PERIOD_ID IN (SELECT P.PP_ID
                     FROM
                      FINCOMM.COM_HR_JEID_PP P
                     WHERE
                      P.TO_BE_PROCESSED = 'Y' AND
                      P.PROCESSED = 'N')
   WHERE
    ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_PI_AMT) = 0 
     OR
    ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_UNQ_PI_AMT) = 0     
     OR
    ABS(T.CUST_CUMULATIVE_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(T.CUST_CUMULATIVE_PI_AMT-T.CUMULATIVE_UNQ_PI_AMT) = 0 
     OR
    ABS(T.CUST_CUMULATIVE_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(T.CUST_CUMULATIVE_PI_AMT-T.CUMULATIVE_PI_AMT) = 0       
;
COMMIT;

UPDATE FINCOMM.COM_HR_TXNS_CUSTDET_RPT_ALL A
SET
 A.MATCH_METHOD = 'M2'
WHERE
 A.ROWID IN (
              SELECT DISTINCT
               S.CUSTDET_TRANS_ID
              FROM 
               FINCOMM.COM_HR_TXNS_STAGE_ALL S
              WHERE
               S.QUERY_MATCH IN ('PP_WW_CUST_NI_AND_UNQ_PI_MATCH_2','PP_WW_CUST_NI_AND_PI_MATCH_2',
                                 'PP_WW_CUST_CUM_NI_AND_UNQ_PI_MATCH_2','PP_WW_CUST_CUM_NI_AND_PI_MATCH_2'))
               AND A.MATCH_METHOD IN ('NA');
 
 COMMIT; 


/***** M3 STAGE LOAD *****/

INSERT INTO COM_HR_TXNS_STAGE_ALL
 (KGEN_PAYEEID, PAY_PERIOD_ID, CUSTOMER_ID, ALT_CUSTOMER_ID, PRODUCT_TYPE,
  COMP_YEAR, SOURCE, COM_IND, CUST_NI_AMT, CUST_PI_AMT,
  CUST_NEW_AMT, CUST_RENEWAL_AMT, CUST_INCREASE_AMT, NEW_RATE, RENEWAL_RATE,
  INCREASE_RATE, CUST_COM_AMT, CUST_TYPE, ITEM_ID, SV_ITEM_ID,
  PRODUCT_CODE, PRODUCT_ISSUE_NUM, PROD_TYPE, UDAC_CODE, DAR_IND,
  CANCEL_IND, THRYV_IND, NI_AMT, PI_AMT, ORIG_UNQ_PI_AMT,
  ORIG_PI_AMT, CUMUL_NI_CUST_TYPE_AMT, CUMULATIVE_NI_AMT, CUMUL_UNQ_PI_CUST_TYPE_AMT, CUMULATIVE_UNQ_PI_AMT,         
  CUMUL_PI_CUST_TYPE_AMT,  CUMULATIVE_PI_AMT, TRANS_ID, CUSTDET_TRANS_ID, QUERY_MATCH) 
  
 SELECT /*+ INDEX(C TMP_HR_TXNS_CUSTDET_RPT_01)
            INDEX(T TMP_HR_TXNS_TRANS1_01) */
   C.KGEN_PAYEEID, C.PAY_PERIOD_ID, C.CUSTOMER_ID, C.ALT_CUSTOMER_ID, C.PRODUCT_TYPE,
   C.COMP_YEAR, C.SOURCE, C.COM_IND, C.CUST_NI_AMT, C.CUST_PI_AMT,
   C.CUST_NEW_AMT, C.CUST_RENEWAL_AMT, C.CUST_INCREASE_AMT, C.NEW_RATE, C.RENEWAL_RATE,
   C.INCREASE_RATE, C.CUST_COM_AMT, T.CUST_TYPE, T.ITEM_ID, T.SV_ITEM_ID,
   T.PRODUCT_CODE, T.PRODUCT_ISSUE_NUM, T.PROD_TYPE, T.UDAC_CODE, T.DAR_IND,
   T.CANCEL_IND, T.THRYV_IND, T.NI_AMT, 
   CASE WHEN ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_UNQ_PI_AMT) = 0 THEN T.UNQ_PI_AMT 
        WHEN ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_PI_AMT) = 0 THEN T.PI_AMT END AS PI_AMT, 
   T.UNQ_PI_AMT AS ORIG_UNQ_PI_AMT,
   T.PI_AMT AS ORIG_PI_AMT, 
   T.CUMUL_NI_CUST_TYPE_AMT, T.CUMULATIVE_NI_AMT, T.CUMUL_UNQ_PI_CUST_TYPE_AMT,  T.CUMULATIVE_UNQ_PI_AMT,         
   T.CUMUL_PI_CUST_TYPE_AMT, T.CUMULATIVE_PI_AMT, T.TRANS_ID,
   C.ROWID AS CUSTDET_TRANS_ID,
   CASE WHEN ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_UNQ_PI_AMT) = 0 
          THEN 'PP_WW_CUST_NI_AND_UNQ_PI_MATCH_3' 
        WHEN ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_PI_AMT) = 0  
          THEN 'PP_WW_CUST_NI_AND_PI_MATCH_3' END AS QUERY_MATCH
  FROM    
   FINCOMM.COM_HR_TXNS_CUSTDET_RPT_ALL C
   INNER JOIN
     (
        SELECT
         X.PERIOD, X.COMP_YEAR, X.YR_MTH, X.CURRENT_MTH, X.PRIOR_MTH,
         X.KGEN_PAYEEID, X.PAY_PERIOD_ID, X.PRODUCT_TYPE, X.WW_CUSTOMER_ID, X.CUST_TYPE, 
         X.UNQ_PI_AMT, X.PI_AMT, X.NI_AMT, X.ITEM_ID, X.SV_ITEM_ID, 
         X.PRODUCT_CODE, X.PRODUCT_ISSUE_NUM, X.PROD_TYPE, X.UDAC_CODE, X.DAR_IND,
         X.CANCEL_IND, X.THRYV_IND, X.TRANS_ID,
         SUM(X.NI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.CUST_TYPE,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMUL_NI_CUST_TYPE_AMT,
         SUM(X.NI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMULATIVE_NI_AMT, 
         SUM(X.UNQ_PI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.CUST_TYPE,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMUL_UNQ_PI_CUST_TYPE_AMT,  
         SUM(X.UNQ_PI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMULATIVE_UNQ_PI_AMT,         
         SUM(X.PI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.CUST_TYPE,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMUL_PI_CUST_TYPE_AMT,  
         SUM(X.PI_AMT) OVER 
               (PARTITION BY  X.KGEN_PAYEEID,
                              CASE WHEN X.PRODUCT_TYPE = 'MULTI PRODUCT NON SEM' THEN 'MULTI PRODUCT' ELSE X.PRODUCT_TYPE END,
                              X.WW_CUSTOMER_ID,
                              X.COMP_YEAR,
                              X.PAY_PERIOD_ID
                 ORDER BY X.PAY_PERIOD_ID) AS CUMULATIVE_PI_AMT      
        FROM
         (
            SELECT 
             CASE WHEN SUBSTR(UPPER(T.HOME_DB), 0,9) = 'DAR MONTH' AND
                       UPPER(T.HOME_DB) LIKE '%SUBSCRIPTION FOR %' AND
                        /* ADDED VALIDATE_CONVERSION LINE FOR A DSS UPDATE 01-03-2024*/
                       VALIDATE_CONVERSION(SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'SUBSCRIPTION FOR ',1)+17,10) AS DATE,'MM/DD/YYYY') = 1 THEN 
                        TO_CHAR(TO_DATE(SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'SUBSCRIPTION FOR ',1)+17,10),'mm/dd/yyyy'),'YYYYMM')
                  WHEN UPPER(T.HOME_DB) LIKE '%DAR MONTH%' AND
                       UPPER(T.HOME_DB) LIKE '%CANCEL FOR %' THEN
                        TO_CHAR(TO_DATE(SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'CANCEL FOR ',1)+11,10),'mm/dd/yyyy'),'YYYYMM')      
                  WHEN UPPER(T.HOME_DB) LIKE '%MOVE DAR CANCEL TO PRIOR PP%' AND
                       SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'MOVE DAR CANCEL TO PRIOR PP',1)+28,7) IN (SELECT P.PP_ID
                                         FROM
                                          FINCOMM.COM_HR_JEID_PP P
                                         WHERE
                                          P.TO_BE_PROCESSED = 'Y' AND
                                          P.PROCESSED = 'N')  
                       THEN TO_CHAR(Y.PRIOR_MTH)
                 WHEN UPPER(T.HOME_DB) LIKE '%MOVE DAR CANCEL TO PRIOR PP%' AND
                       SUBSTR(UPPER(T.HOME_DB), INSTR(UPPER(T.HOME_DB), 'MOVE DAR CANCEL TO PRIOR PP',1)+28,7) IN (SELECT P.PP_ID
                                         FROM
                                          FINCOMM.COM_HR_JEID_PP P
                                         WHERE
                                          P.TO_BE_PROCESSED = 'Y' AND
                                          P.PROCESSED = 'Y') AND
                       T.ORIG_PAY_PERIOD_ID IN (SELECT P.PP_ID
                                         FROM
                                          FINCOMM.COM_HR_JEID_PP P
                                         WHERE
                                          P.TO_BE_PROCESSED = 'Y' AND
                                          P.PROCESSED = 'Y') AND
                       TO_CHAR(T.EXTRACT_DATE-1,'YYYYMM') = TO_CHAR(Y.PRIOR_MTH)                 
                       THEN TO_CHAR(Y.PRIOR_2_MTH)       
                  WHEN T.ORIG_PAY_PERIOD_ID <> T.PAY_PERIOD_ID AND
                       T.ORIG_PAY_PERIOD_ID IN (SELECT P.PP_ID
                                         FROM
                                          FINCOMM.COM_HR_JEID_PP P
                                         WHERE
                                          P.TO_BE_PROCESSED = 'Y' AND
                                          P.PROCESSED = 'N')
                       THEN TO_CHAR(Y.PRIOR_MTH)
                  WHEN UPPER(T.HOME_DB) LIKE '%DAR CANCEL%' AND
                       T.ORIG_PAY_PERIOD_ID IN (SELECT P.PP_ID
                                                FROM
                                                 FINCOMM.COM_HR_JEID_PP P
                                                WHERE
                                                 P.TO_BE_PROCESSED = 'Y' AND
                                                 P.PROCESSED = 'N')  
                       THEN TO_CHAR(Y.PRIOR_MTH)      
                  WHEN UPPER(T.HOME_DB) LIKE '%MOVE NEGATIVE INCREASE BACK TO PRIOR PP%' AND
                       T.ORIG_PAY_PERIOD_ID = T.PAY_PERIOD_ID AND
                       T.ORIG_PAY_PERIOD_ID IN (SELECT P.PP_ID
                                                FROM
                                                 FINCOMM.COM_HR_JEID_PP P
                                                WHERE
                                                 P.TO_BE_PROCESSED = 'Y' AND
                                                 P.PROCESSED = 'N') 
                       THEN TO_CHAR(Y.PRIOR_MTH) 
                  WHEN UPPER(T.HOME_DB) = 'M TMS3 DAR DBI NI RATEUP DSS UPDATE' THEN TO_CHAR(T.EXTRACT_DATE,'YYYYMM')      
                  ELSE TO_CHAR(T.EXTRACT_DATE-2,'YYYYMM') END AS PERIOD, -- i think it should be -1
             CASE WHEN UPPER(T.HOME_DB) LIKE '%COMP YEAR FLIP%' AND 
                       T.COMP_YEAR < TO_NUMBER(SUBSTR(P.YR_MTH,0,4)) THEN TO_NUMBER(SUBSTR(P.YR_MTH,0,4))
                  ELSE T.COMP_YEAR END AS COMP_YEAR,
             P.YR_MTH, X.CURRENT_MTH, Y.PRIOR_MTH, T.KGEN_PAYEEID, T.PAY_PERIOD_ID,
             T.HOME_DB, T.EXTRACT_DATE, T.ORIG_PAY_PERIOD_ID,T.COMP_YEAR AS ORIG_COMP_YEAR,
             T.PRODUCT_TYPE, T.WW_CUSTOMER_ID, T.CUST_TYPE, T.UNQ_PI_AMT, T.PI_AMT,
             T.NI_AMT, T.ITEM_ID, T.SV_ITEM_ID, T.PRODUCT_CODE, T.PRODUCT_ISSUE_NUM,
             T.PROD_TYPE, T.UDAC_CODE, T.DAR_IND, T.CANCEL_IND, T.THRYV_IND,
             T.TRANS_ID
            FROM
             FINCOMM.COM_HR_TXNS_TRANS1_ALL T
             INNER JOIN FINCOMM.COM_HR_JEID_PP P
              ON T.PAY_PERIOD_ID = P.PP_ID AND
                 P.TO_BE_PROCESSED = 'Y' AND
                 P.PROCESSED = 'N'
              CROSS JOIN (SELECT MAX(PP.YR_MTH) AS CURRENT_MTH FROM FINCOMM.COM_HR_JEID_PP PP
                          WHERE PP.TO_BE_PROCESSED = 'Y' AND PP.PROCESSED = 'N') X
              CROSS JOIN (SELECT MAX(X.PREVIOUS_MTH) AS PRIOR_MTH, MAX(X.PRIOR_2_MTH) AS PRIOR_2_MTH
                          FROM (SELECT YR_MTH AS PREVIOUS_MTH, LAG(YR_MTH,1,0) OVER (ORDER BY YR_MTH) AS PRIOR_2_MTH
                                FROM (SELECT DISTINCT PP.YR_MTH FROM FINCOMM.COM_HR_JEID_PP PP
                                WHERE PP.TO_BE_PROCESSED = 'Y' AND PP.PROCESSED = 'Y') X ) X   ) Y
         ) X
        WHERE
         X.PERIOD = TO_CHAR(ADD_MONTHS(TO_DATE(X.CURRENT_MTH||'01','YYYYMMDD'),-1),'YYYYMM')
        ORDER BY
         X.WW_CUSTOMER_ID,
         X.COMP_YEAR
     ) T
    ON
      C.KGEN_PAYEEID = T.KGEN_PAYEEID AND
      C.COMP_YEAR = T.COMP_YEAR AND
      C.PRODUCT_TYPE = T.PRODUCT_TYPE AND
      C.CUSTOMER_ID = T.WW_CUSTOMER_ID AND
      C.COM_PAYOUT_IND = 1 AND
      C.SOURCE = 'N' AND
      C.MATCH_METHOD IN('NA') AND
      C.PAY_PERIOD_ID IN (SELECT P.PP_ID
                     FROM
                      FINCOMM.COM_HR_JEID_PP P
                     WHERE
                      P.TO_BE_PROCESSED = 'Y' AND
                      P.PROCESSED = 'N')
   WHERE
     ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_UNQ_PI_AMT) = 0 
     OR
     ABS(C.CUST_NI_AMT-T.CUMULATIVE_NI_AMT) + ABS(C.CUST_PI_AMT-T.CUMULATIVE_PI_AMT) = 0   
; 

COMMIT;

UPDATE FINCOMM.COM_HR_TXNS_CUSTDET_RPT_ALL A
SET
 A.MATCH_METHOD = 'M3'
WHERE
 A.ROWID IN (
              SELECT DISTINCT
               S.CUSTDET_TRANS_ID
              FROM 
               FINCOMM.COM_HR_TXNS_STAGE_ALL S
              WHERE
               S.QUERY_MATCH IN ('PP_WW_CUST_NI_AND_UNQ_PI_MATCH_3','PP_WW_CUST_NI_AND_PI_MATCH_3'))
               AND A.MATCH_METHOD IN ('NA');
COMMIT;       

  
/***** LOAD M4 STAGE DATA  - CUSTDET COM AMOUNT IS ZERO *****/
INSERT INTO COM_HR_TXNS_STAGE_ALL
 (KGEN_PAYEEID, PAY_PERIOD_ID, CUSTOMER_ID, ALT_CUSTOMER_ID, PRODUCT_TYPE,
  COMP_YEAR, SOURCE, COM_IND, CUST_NI_AMT, CUST_PI_AMT,
  CUST_NEW_AMT, CUST_RENEWAL_AMT, CUST_INCREASE_AMT, NEW_RATE, RENEWAL_RATE,
  INCREASE_RATE, CUST_COM_AMT, CUST_TYPE, ITEM_ID, SV_ITEM_ID,
  PRODUCT_CODE, PRODUCT_ISSUE_NUM, PROD_TYPE, UDAC_CODE, DAR_IND,
  CANCEL_IND, THRYV_IND, NI_AMT, PI_AMT, ORIG_UNQ_PI_AMT,
  ORIG_PI_AMT, CUMUL_NI_CUST_TYPE_AMT, CUMULATIVE_NI_AMT, CUMUL_UNQ_PI_CUST_TYPE_AMT, CUMULATIVE_UNQ_PI_AMT,         
  CUMUL_PI_CUST_TYPE_AMT,  CUMULATIVE_PI_AMT, TRANS_ID, CUSTDET_TRANS_ID, QUERY_MATCH)

  SELECT DISTINCT
    C.KGEN_PAYEEID, C.PAY_PERIOD_ID, C.CUSTOMER_ID, C.ALT_CUSTOMER_ID, C.PRODUCT_TYPE,
    C.COMP_YEAR, C.SOURCE, C.COM_IND, C.CUST_NI_AMT, C.CUST_PI_AMT,
    C.CUST_NEW_AMT, C.CUST_RENEWAL_AMT, C.CUST_INCREASE_AMT, C.NEW_RATE, C.RENEWAL_RATE,
    C.INCREASE_RATE, C.CUST_COM_AMT, 'ADV' AS CUST_TYPE, '' AS ITEM_ID, '' AS SV_ITEM_ID,
    '' AS PRODUCT_CODE, '' AS PRODUCT_ISSUE_NUM, 'UNKNOWN' AS PROD_TYPE, '' AS UDAC_CODE, 'N' AS DAR_IND,
    'N' AS CANCEL_IND, 'N' AS THRYV_IND, C.CUST_NI_AMT AS NI_AMT, C.CUST_PI_AMT AS PI_AMT, C.CUST_PI_AMT AS ORIG_UNQ_PI_AMT,
    C.CUST_PI_AMT AS ORIG_PI_AMT, C.CUST_NI_AMT AS CUMUL_NI_CUST_TYPE_AMT, C.CUST_NI_AMT AS CUMULATIVE_NI_AMT,
    C.CUST_PI_AMT AS CUMUL_UNQ_PI_CUST_TYPE_AMT, C.CUST_PI_AMT AS CUMULATIVE_UNQ_PI_AMT,
    C.CUST_PI_AMT AS CUMUL_PI_CUST_TYPE_AMT, C.CUST_PI_AMT AS CUMULATIVE_PI_AMT, '' AS TRANS_ID,
    C.ROWID AS CUSTDET_TRANS_ID, 'NO_QUALIFIED_MATCH_TO_TRANS' AS QUERY_MATCH
--    CASE WHEN C.CUST_COM_AMT = 0 THEN 'CUSTDET_COM_AMT_IS_ZERO' 
--         WHEN C.CUST_NI_AMT = 0 AND C.CUST_PI_AMT = 0 THEN 'CUSTDET_NI_AND_PI_AMTS_ARE_ZERO'
--         ELSE 'NO_QUALIFIED_MATCH_TO_TRANS'
--      END AS QUERY_MATCH
  FROM 
   FINCOMM.COM_HR_TXNS_CUSTDET_RPT_ALL C
  WHERE
   C.MATCH_METHOD = 'NA' AND
   C.COM_PAYOUT_IND = 1 AND
   C.SOURCE = 'N' AND
   C.PAY_PERIOD_ID IN (SELECT P.PP_ID
                     FROM
                      FINCOMM.COM_HR_JEID_PP P
                     WHERE
                      P.TO_BE_PROCESSED = 'Y' AND
                      P.PROCESSED = 'N')
; 

COMMIT;

UPDATE FINCOMM.COM_HR_TXNS_CUSTDET_RPT_ALL A
SET
 A.MATCH_METHOD = 'M4'
WHERE
 A.ROWID IN (
              SELECT DISTINCT
               S.CUSTDET_TRANS_ID
              FROM 
               FINCOMM.COM_HR_TXNS_STAGE_ALL S
              WHERE
               S.QUERY_MATCH IN (/*'CUSTDET_COM_AMT_IS_ZERO','CUSTDET_NI_AND_PI_AMTS_ARE_ZERO',*/'NO_QUALIFIED_MATCH_TO_TRANS'))
               AND A.MATCH_METHOD IN ('NA');
COMMIT;   
